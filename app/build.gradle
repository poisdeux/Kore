apply plugin: 'com.android.application'

def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--always'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        applicationId "org.xbmc.kore"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 19
        versionName = getVersionName()
    }

    File keystoreFile = file('keystore.properties')

    signingConfigs {
        release {
            if (keystoreFile.exists()) {
                def Properties keyProps = new Properties()
                keyProps.load(new FileInputStream(keystoreFile))

                storeFile file(keyProps["store"])
                keyAlias keyProps["alias"]
                storePassword keyProps["storePass"]
                keyPassword keyProps["pass"]
            }
        }
    }

    sourceSets {
        fullDebug {
            assets.srcDirs += 'src/testUtils/assets'
        }
        test {
            java.srcDirs += 'src/testUtils/java'
        }
        androidTest {
            java.srcDirs += 'src/testUtils/java'
            assets.srcDirs += 'src/testUtils/assets'
        }
        instrumentationTest {
            assets.srcDirs += 'src/testUtils/assets'
        }
    }

    productFlavors {
        full {
        }

        instrumentationTest {
            applicationId "org.xbmc.kore.instrumentationtest"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            proguardFiles 'proguardTest-rules.pro'
        }
    }

    buildTypes {
//        debug {
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }

        release {
            if (keystoreFile.exists()) {
                signingConfig signingConfigs.release
            }
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        // Too much trouble keeping all translations in sync
        disable 'MissingTranslation'

        //The xml launcher icon introduced in API 26 causes lint to generate
        //an error that the icon is not a PNG format
        //This reduces the error to a warning
        warning 'IconLauncherFormat'
    }

//    allprojects {
//        gradle.projectsEvaluated {
//            tasks.withType(JavaCompile) {
//                options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
//            }
//        }
//    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

ext {
    supportLibVersion = '26.1.0'
}

dependencies {
    compile "com.android.support:support-v4:${supportLibVersion}"
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:cardview-v7:${supportLibVersion}"
    compile "com.android.support:preference-v14:${supportLibVersion}"
    compile "com.android.support:support-v13:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"

    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.2'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.squareup.okhttp:okhttp:2.3.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'org.jmdns:jmdns:3.5.1'
    compile 'com.astuetz:pagerslidingtabstrip:1.0.1'
    compile 'at.blogc:expandabletextview:1.0.3'
    compile 'com.sothree.slidinguppanel:library:3.3.1'

    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-idling-resource:2.2.2'
    androidTestCompile "com.android.support:support-v13:${supportLibVersion}"
    instrumentationTestCompile 'junit:junit:4.12'

    testCompile 'org.robolectric:robolectric:3.1.1'
    testCompile 'junit:junit:4.12'

    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task mvScreenshots(type: Exec) {
    commandLine "adb", "pull", "/data/data/org.xbmc.kore.instrumentationtest/files/screenshots"
    commandLine "adb", "shell", "rm", "-r", "-f", "/data/data/org.xbmc.kore.instrumentationtest/files/screenshots"
}

task runInstrumentedTests(type: Exec) {
    commandLine "../tools/jenkins/run_instrumentation_tests.pl", "-C", "../app/src/androidTest/java/org/xbmc/kore/tests/ui/addons/"

    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
}

task grantAnimationPermissionDev(type: Exec) {
    def adb = android.getAdbExe().toString()
    println("Executing: $adb shell pm grant $android.productFlavors.instrumentationTest.applicationId android.permission.SET_ANIMATION_SCALE")
    commandLine "$adb shell pm grant $android.productFlavors.instrumentationTest.applicationId android.permission.SET_ANIMATION_SCALE".split(' ')
}

tasks.whenTaskAdded { task ->
    /**
     * Android gradle plugin 2.3.x contains a bug where the assets for fullDebug
     * are not copied. The task assembleFullDebug does copy the required assets,
     * so this dependency fixes the issue.
     */
    if (task.name.contains("compileFullDebugUnitTestSources")) {
        task.dependsOn assembleFullDebug
    }

    if (task.name.startsWith('installInstrumentationTestDebugAndroidTest')) {
        runInstrumentedTests.dependsOn installInstrumentationTestDebugAndroidTest
    }

    if (task.name.startsWith('assembleInstrumentationTestDebugAndroidTest')) {
        task.dependsOn grantAnimationPermissionDev
    }
}